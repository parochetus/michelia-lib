// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vector.proto

package v0

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MatchRequest struct {
	Table                *TableLocation                        `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Uid                  string                                `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Sfr                  *PlainSelectFilterReduceConfiguration `protobuf:"bytes,3,opt,name=sfr,proto3" json:"sfr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *MatchRequest) Reset()         { *m = MatchRequest{} }
func (m *MatchRequest) String() string { return proto.CompactTextString(m) }
func (*MatchRequest) ProtoMessage()    {}
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ed4932af336a7a9, []int{0}
}

func (m *MatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchRequest.Unmarshal(m, b)
}
func (m *MatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchRequest.Marshal(b, m, deterministic)
}
func (m *MatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchRequest.Merge(m, src)
}
func (m *MatchRequest) XXX_Size() int {
	return xxx_messageInfo_MatchRequest.Size(m)
}
func (m *MatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MatchRequest proto.InternalMessageInfo

func (m *MatchRequest) GetTable() *TableLocation {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *MatchRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *MatchRequest) GetSfr() *PlainSelectFilterReduceConfiguration {
	if m != nil {
		return m.Sfr
	}
	return nil
}

type MatchInfo struct {
	Table                *TableLocation  `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Content              []*MatchElement `protobuf:"bytes,2,rep,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MatchInfo) Reset()         { *m = MatchInfo{} }
func (m *MatchInfo) String() string { return proto.CompactTextString(m) }
func (*MatchInfo) ProtoMessage()    {}
func (*MatchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ed4932af336a7a9, []int{1}
}

func (m *MatchInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchInfo.Unmarshal(m, b)
}
func (m *MatchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchInfo.Marshal(b, m, deterministic)
}
func (m *MatchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchInfo.Merge(m, src)
}
func (m *MatchInfo) XXX_Size() int {
	return xxx_messageInfo_MatchInfo.Size(m)
}
func (m *MatchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MatchInfo proto.InternalMessageInfo

func (m *MatchInfo) GetTable() *TableLocation {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *MatchInfo) GetContent() []*MatchElement {
	if m != nil {
		return m.Content
	}
	return nil
}

type MatchElement struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Un                   string   `protobuf:"bytes,2,opt,name=un,proto3" json:"un,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchElement) Reset()         { *m = MatchElement{} }
func (m *MatchElement) String() string { return proto.CompactTextString(m) }
func (*MatchElement) ProtoMessage()    {}
func (*MatchElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ed4932af336a7a9, []int{2}
}

func (m *MatchElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchElement.Unmarshal(m, b)
}
func (m *MatchElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchElement.Marshal(b, m, deterministic)
}
func (m *MatchElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchElement.Merge(m, src)
}
func (m *MatchElement) XXX_Size() int {
	return xxx_messageInfo_MatchElement.Size(m)
}
func (m *MatchElement) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchElement.DiscardUnknown(m)
}

var xxx_messageInfo_MatchElement proto.InternalMessageInfo

func (m *MatchElement) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *MatchElement) GetUn() string {
	if m != nil {
		return m.Un
	}
	return ""
}

func init() {
	proto.RegisterType((*MatchRequest)(nil), "mechelia.v0.MatchRequest")
	proto.RegisterType((*MatchInfo)(nil), "mechelia.v0.MatchInfo")
	proto.RegisterType((*MatchElement)(nil), "mechelia.v0.MatchElement")
}

func init() { proto.RegisterFile("vector.proto", fileDescriptor_1ed4932af336a7a9) }

var fileDescriptor_1ed4932af336a7a9 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x41, 0x4b, 0xfb, 0x30,
	0x18, 0xc6, 0x69, 0xcb, 0xf6, 0x67, 0x59, 0xf9, 0xa3, 0x11, 0xa4, 0xf6, 0x54, 0x7a, 0xea, 0xc5,
	0xae, 0x76, 0x37, 0x8f, 0x4e, 0x05, 0x41, 0x41, 0xaa, 0x78, 0xf0, 0x96, 0x65, 0x6f, 0xbb, 0x40,
	0x9a, 0x68, 0xf6, 0xa6, 0x5f, 0xc5, 0xaf, 0x2b, 0x4d, 0x3b, 0x74, 0xe8, 0xc9, 0x5b, 0xc8, 0xf3,
	0x3e, 0x4f, 0xde, 0xdf, 0x13, 0x12, 0x76, 0xc0, 0x51, 0x9b, 0xfc, 0xcd, 0x68, 0xd4, 0x74, 0xde,
	0x02, 0xdf, 0x82, 0x14, 0x2c, 0xef, 0x8a, 0x38, 0xe4, 0xba, 0x6d, 0xb5, 0x1a, 0xa4, 0xf4, 0xc3,
	0x23, 0xe1, 0x03, 0x43, 0xbe, 0xad, 0xe0, 0xdd, 0xc2, 0x0e, 0x69, 0x41, 0x26, 0xc8, 0xd6, 0x12,
	0x22, 0x2f, 0xf1, 0xb2, 0x79, 0x19, 0xe7, 0xdf, 0xbc, 0xf9, 0x73, 0xaf, 0xdc, 0x6b, 0xce, 0x50,
	0x68, 0x55, 0x0d, 0x83, 0xf4, 0x88, 0x04, 0x56, 0x6c, 0x22, 0x3f, 0xf1, 0xb2, 0x59, 0xd5, 0x1f,
	0xe9, 0x8a, 0x04, 0xbb, 0xda, 0x44, 0x81, 0x4b, 0xb8, 0x38, 0x48, 0x78, 0x94, 0x4c, 0xa8, 0x27,
	0x90, 0xc0, 0xf1, 0x56, 0x48, 0x04, 0x53, 0xc1, 0xc6, 0x72, 0x58, 0x69, 0x55, 0x8b, 0xc6, 0x9a,
	0x21, 0xb8, 0x77, 0xa7, 0x86, 0xcc, 0xdc, 0x62, 0x77, 0xaa, 0xd6, 0x7f, 0xd8, 0x6a, 0x49, 0xfe,
	0x71, 0xad, 0x10, 0x14, 0x46, 0x7e, 0x12, 0x64, 0xf3, 0xf2, 0xec, 0xc0, 0xe3, 0xa2, 0x6f, 0x24,
	0xb4, 0xa0, 0xb0, 0xda, 0x4f, 0xa6, 0xc5, 0x58, 0xc6, 0x28, 0xec, 0xd1, 0xbc, 0x2f, 0xb4, 0xff,
	0xc4, 0xb7, 0x6a, 0x64, 0xf5, 0xad, 0x2a, 0xaf, 0xc9, 0xf4, 0xc5, 0x55, 0x4d, 0x2f, 0xc9, 0xa4,
	0xed, 0xbd, 0xf4, 0x97, 0x87, 0xc6, 0x72, 0xe3, 0xd3, 0x9f, 0x52, 0x8f, 0x77, 0x75, 0xf2, 0x7a,
	0x9c, 0x2f, 0xdc, 0x87, 0x9c, 0x37, 0x5a, 0x32, 0xd5, 0x2c, 0xba, 0x62, 0x3d, 0x75, 0x17, 0xcb,
	0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x64, 0x28, 0x36, 0xcc, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VectorClient is the client API for Vector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VectorClient interface {
	Match(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (*MatchInfo, error)
}

type vectorClient struct {
	cc *grpc.ClientConn
}

func NewVectorClient(cc *grpc.ClientConn) VectorClient {
	return &vectorClient{cc}
}

func (c *vectorClient) Match(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (*MatchInfo, error) {
	out := new(MatchInfo)
	err := c.cc.Invoke(ctx, "/mechelia.v0.Vector/match", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VectorServer is the server API for Vector service.
type VectorServer interface {
	Match(context.Context, *MatchRequest) (*MatchInfo, error)
}

// UnimplementedVectorServer can be embedded to have forward compatible implementations.
type UnimplementedVectorServer struct {
}

func (*UnimplementedVectorServer) Match(ctx context.Context, req *MatchRequest) (*MatchInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Match not implemented")
}

func RegisterVectorServer(s *grpc.Server, srv VectorServer) {
	s.RegisterService(&_Vector_serviceDesc, srv)
}

func _Vector_Match_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VectorServer).Match(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mechelia.v0.Vector/Match",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VectorServer).Match(ctx, req.(*MatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Vector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mechelia.v0.Vector",
	HandlerType: (*VectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "match",
			Handler:    _Vector_Match_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vector.proto",
}
