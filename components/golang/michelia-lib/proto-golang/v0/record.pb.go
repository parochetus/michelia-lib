// Code generated by protoc-gen-go. DO NOT EDIT.
// source: record.proto

package v0

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RecordRequest struct {
	Table                *TableLocation `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Timestamp            int64          `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Domain               string         `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RecordRequest) Reset()         { *m = RecordRequest{} }
func (m *RecordRequest) String() string { return proto.CompactTextString(m) }
func (*RecordRequest) ProtoMessage()    {}
func (*RecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{0}
}

func (m *RecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordRequest.Unmarshal(m, b)
}
func (m *RecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordRequest.Marshal(b, m, deterministic)
}
func (m *RecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordRequest.Merge(m, src)
}
func (m *RecordRequest) XXX_Size() int {
	return xxx_messageInfo_RecordRequest.Size(m)
}
func (m *RecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecordRequest proto.InternalMessageInfo

func (m *RecordRequest) GetTable() *TableLocation {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *RecordRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *RecordRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type RecordResponse struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecordResponse) Reset()         { *m = RecordResponse{} }
func (m *RecordResponse) String() string { return proto.CompactTextString(m) }
func (*RecordResponse) ProtoMessage()    {}
func (*RecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{1}
}

func (m *RecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordResponse.Unmarshal(m, b)
}
func (m *RecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordResponse.Marshal(b, m, deterministic)
}
func (m *RecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordResponse.Merge(m, src)
}
func (m *RecordResponse) XXX_Size() int {
	return xxx_messageInfo_RecordResponse.Size(m)
}
func (m *RecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecordResponse proto.InternalMessageInfo

func (m *RecordResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RecordResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*RecordRequest)(nil), "mechelia.v0.RecordRequest")
	proto.RegisterType((*RecordResponse)(nil), "mechelia.v0.RecordResponse")
}

func init() { proto.RegisterFile("record.proto", fileDescriptor_bf94fd919e302a1d) }

var fileDescriptor_bf94fd919e302a1d = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x50, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xa6, 0x56, 0x0b, 0x7d, 0x9b, 0x82, 0x11, 0xa4, 0x54, 0x0f, 0x65, 0xa7, 0x5e, 0xcc, 0xca,
	0xbc, 0x8a, 0xa0, 0x27, 0x0f, 0x9e, 0x82, 0x27, 0x6f, 0x59, 0xf2, 0x98, 0x85, 0x26, 0xaf, 0x36,
	0x6f, 0xf3, 0xdf, 0x97, 0x25, 0x13, 0x1d, 0x78, 0xcb, 0xf7, 0x2b, 0xdf, 0x7b, 0x0f, 0xe6, 0x13,
	0x1a, 0x9a, 0xac, 0x1c, 0x27, 0x62, 0x12, 0x33, 0x87, 0xe6, 0x03, 0x87, 0x5e, 0xcb, 0x5d, 0x57,
	0xcf, 0x0d, 0x39, 0x47, 0x3e, 0x49, 0x8b, 0x2f, 0x38, 0x57, 0xd1, 0xaa, 0xf0, 0x73, 0x8b, 0x81,
	0x45, 0x07, 0x67, 0xac, 0xd7, 0x03, 0x56, 0x59, 0x93, 0xb5, 0xb3, 0x55, 0x2d, 0xff, 0x64, 0xe5,
	0xdb, 0x5e, 0x79, 0x25, 0xa3, 0xb9, 0x27, 0xaf, 0x92, 0x51, 0xdc, 0x42, 0xc9, 0xbd, 0xc3, 0xc0,
	0xda, 0x8d, 0xd5, 0x49, 0x93, 0xb5, 0xb9, 0xfa, 0x25, 0xc4, 0x35, 0x14, 0x96, 0x9c, 0xee, 0x7d,
	0x95, 0x37, 0x59, 0x5b, 0xaa, 0x03, 0x5a, 0x3c, 0xc0, 0xc5, 0x4f, 0x71, 0x18, 0xc9, 0x07, 0x14,
	0x02, 0x4e, 0x0d, 0xd9, 0x54, 0x5c, 0xaa, 0xf8, 0xde, 0xa7, 0x03, 0x6b, 0xde, 0x86, 0xf8, 0x71,
	0xa9, 0x0e, 0x68, 0xf5, 0x02, 0x45, 0x4a, 0x8b, 0x47, 0xc8, 0x9f, 0xac, 0x15, 0xc7, 0x73, 0x1e,
	0xad, 0x54, 0xdf, 0xfc, 0xab, 0xa5, 0xd6, 0xe7, 0xab, 0xf7, 0x4b, 0xb9, 0x8c, 0xb7, 0xb8, 0xdb,
	0xd0, 0xa0, 0xfd, 0x66, 0xb9, 0xeb, 0xd6, 0x45, 0x24, 0xee, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x63, 0x26, 0xec, 0xba, 0x47, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecordClient is the client API for Record service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecordClient interface {
	Add(ctx context.Context, in *RecordRequest, opts ...grpc.CallOption) (*RecordResponse, error)
}

type recordClient struct {
	cc *grpc.ClientConn
}

func NewRecordClient(cc *grpc.ClientConn) RecordClient {
	return &recordClient{cc}
}

func (c *recordClient) Add(ctx context.Context, in *RecordRequest, opts ...grpc.CallOption) (*RecordResponse, error) {
	out := new(RecordResponse)
	err := c.cc.Invoke(ctx, "/mechelia.v0.Record/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecordServer is the server API for Record service.
type RecordServer interface {
	Add(context.Context, *RecordRequest) (*RecordResponse, error)
}

// UnimplementedRecordServer can be embedded to have forward compatible implementations.
type UnimplementedRecordServer struct {
}

func (*UnimplementedRecordServer) Add(ctx context.Context, req *RecordRequest) (*RecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}

func RegisterRecordServer(s *grpc.Server, srv RecordServer) {
	s.RegisterService(&_Record_serviceDesc, srv)
}

func _Record_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mechelia.v0.Record/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordServer).Add(ctx, req.(*RecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Record_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mechelia.v0.Record",
	HandlerType: (*RecordServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Record_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "record.proto",
}
