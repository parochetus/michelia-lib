// Code generated by protoc-gen-go. DO NOT EDIT.
// source: element.proto

package v0

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ElementRequest struct {
	Table                *TableLocation `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Uid                  string         `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Timestamp            int64          `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data                 []float32      `protobuf:"fixed32,4,rep,packed,name=data,proto3" json:"data,omitempty"`
	Head                 []string       `protobuf:"bytes,5,rep,name=head,proto3" json:"head,omitempty"`
	Detail               []string       `protobuf:"bytes,6,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ElementRequest) Reset()         { *m = ElementRequest{} }
func (m *ElementRequest) String() string { return proto.CompactTextString(m) }
func (*ElementRequest) ProtoMessage()    {}
func (*ElementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_78d673c3edfc3bd7, []int{0}
}

func (m *ElementRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementRequest.Unmarshal(m, b)
}
func (m *ElementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementRequest.Marshal(b, m, deterministic)
}
func (m *ElementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementRequest.Merge(m, src)
}
func (m *ElementRequest) XXX_Size() int {
	return xxx_messageInfo_ElementRequest.Size(m)
}
func (m *ElementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ElementRequest proto.InternalMessageInfo

func (m *ElementRequest) GetTable() *TableLocation {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *ElementRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ElementRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ElementRequest) GetData() []float32 {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ElementRequest) GetHead() []string {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *ElementRequest) GetDetail() []string {
	if m != nil {
		return m.Detail
	}
	return nil
}

type ElementId struct {
	Table                *TableLocation `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Uid                  string         `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Timestamp            int64          `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Head                 []string       `protobuf:"bytes,4,rep,name=head,proto3" json:"head,omitempty"`
	Detail               []string       `protobuf:"bytes,5,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ElementId) Reset()         { *m = ElementId{} }
func (m *ElementId) String() string { return proto.CompactTextString(m) }
func (*ElementId) ProtoMessage()    {}
func (*ElementId) Descriptor() ([]byte, []int) {
	return fileDescriptor_78d673c3edfc3bd7, []int{1}
}

func (m *ElementId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementId.Unmarshal(m, b)
}
func (m *ElementId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementId.Marshal(b, m, deterministic)
}
func (m *ElementId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementId.Merge(m, src)
}
func (m *ElementId) XXX_Size() int {
	return xxx_messageInfo_ElementId.Size(m)
}
func (m *ElementId) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementId.DiscardUnknown(m)
}

var xxx_messageInfo_ElementId proto.InternalMessageInfo

func (m *ElementId) GetTable() *TableLocation {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *ElementId) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ElementId) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ElementId) GetHead() []string {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *ElementId) GetDetail() []string {
	if m != nil {
		return m.Detail
	}
	return nil
}

type ElementResponse struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElementResponse) Reset()         { *m = ElementResponse{} }
func (m *ElementResponse) String() string { return proto.CompactTextString(m) }
func (*ElementResponse) ProtoMessage()    {}
func (*ElementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_78d673c3edfc3bd7, []int{2}
}

func (m *ElementResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementResponse.Unmarshal(m, b)
}
func (m *ElementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementResponse.Marshal(b, m, deterministic)
}
func (m *ElementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementResponse.Merge(m, src)
}
func (m *ElementResponse) XXX_Size() int {
	return xxx_messageInfo_ElementResponse.Size(m)
}
func (m *ElementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ElementResponse proto.InternalMessageInfo

func (m *ElementResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ElementResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ElementInfo struct {
	Table                *TableLocation `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Content              []*ElementItem `protobuf:"bytes,2,rep,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ElementInfo) Reset()         { *m = ElementInfo{} }
func (m *ElementInfo) String() string { return proto.CompactTextString(m) }
func (*ElementInfo) ProtoMessage()    {}
func (*ElementInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_78d673c3edfc3bd7, []int{3}
}

func (m *ElementInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementInfo.Unmarshal(m, b)
}
func (m *ElementInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementInfo.Marshal(b, m, deterministic)
}
func (m *ElementInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementInfo.Merge(m, src)
}
func (m *ElementInfo) XXX_Size() int {
	return xxx_messageInfo_ElementInfo.Size(m)
}
func (m *ElementInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ElementInfo proto.InternalMessageInfo

func (m *ElementInfo) GetTable() *TableLocation {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *ElementInfo) GetContent() []*ElementItem {
	if m != nil {
		return m.Content
	}
	return nil
}

type ElementItem struct {
	Uid                  string    `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Timestamp            int64     `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data                 []float32 `protobuf:"fixed32,3,rep,packed,name=data,proto3" json:"data,omitempty"`
	Head                 []string  `protobuf:"bytes,4,rep,name=head,proto3" json:"head,omitempty"`
	Detail               []string  `protobuf:"bytes,5,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ElementItem) Reset()         { *m = ElementItem{} }
func (m *ElementItem) String() string { return proto.CompactTextString(m) }
func (*ElementItem) ProtoMessage()    {}
func (*ElementItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_78d673c3edfc3bd7, []int{4}
}

func (m *ElementItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementItem.Unmarshal(m, b)
}
func (m *ElementItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementItem.Marshal(b, m, deterministic)
}
func (m *ElementItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementItem.Merge(m, src)
}
func (m *ElementItem) XXX_Size() int {
	return xxx_messageInfo_ElementItem.Size(m)
}
func (m *ElementItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementItem.DiscardUnknown(m)
}

var xxx_messageInfo_ElementItem proto.InternalMessageInfo

func (m *ElementItem) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ElementItem) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ElementItem) GetData() []float32 {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ElementItem) GetHead() []string {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *ElementItem) GetDetail() []string {
	if m != nil {
		return m.Detail
	}
	return nil
}

func init() {
	proto.RegisterType((*ElementRequest)(nil), "mechelia.v0.ElementRequest")
	proto.RegisterType((*ElementId)(nil), "mechelia.v0.ElementId")
	proto.RegisterType((*ElementResponse)(nil), "mechelia.v0.ElementResponse")
	proto.RegisterType((*ElementInfo)(nil), "mechelia.v0.ElementInfo")
	proto.RegisterType((*ElementItem)(nil), "mechelia.v0.ElementItem")
}

func init() { proto.RegisterFile("element.proto", fileDescriptor_78d673c3edfc3bd7) }

var fileDescriptor_78d673c3edfc3bd7 = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0x4d, 0xcb, 0xd3, 0x40,
	0x10, 0xc7, 0x49, 0xb6, 0xe9, 0x43, 0x26, 0xbe, 0xae, 0x50, 0x96, 0xda, 0x43, 0xc8, 0x29, 0x17,
	0xd3, 0x12, 0x0f, 0x1e, 0x44, 0xd0, 0xa2, 0x88, 0xe0, 0x41, 0x16, 0x4f, 0xde, 0xb6, 0xd9, 0x69,
	0x1b, 0xc8, 0xee, 0x56, 0x33, 0xed, 0xcd, 0xa3, 0x1f, 0xc2, 0xaf, 0xe1, 0x27, 0x94, 0xbc, 0x59,
	0x0b, 0x29, 0x8a, 0xc2, 0x73, 0x9b, 0x9d, 0x99, 0x7f, 0xf6, 0x37, 0xff, 0xc9, 0xc2, 0x5d, 0xac,
	0xd0, 0xa0, 0xa5, 0xec, 0xf0, 0xc5, 0x91, 0xe3, 0x91, 0xc1, 0x62, 0x8f, 0x55, 0xa9, 0xb2, 0xd3,
	0x6a, 0x7e, 0xa7, 0x70, 0xc6, 0x38, 0xdb, 0x95, 0x92, 0x1f, 0x1e, 0xdc, 0x7b, 0xd3, 0x35, 0x4b,
	0xfc, 0x7c, 0xc4, 0x9a, 0xf8, 0x0a, 0x02, 0x52, 0x9b, 0x0a, 0x85, 0x17, 0x7b, 0x69, 0x94, 0xcf,
	0xb3, 0xdf, 0xd4, 0xd9, 0xc7, 0xa6, 0xf2, 0xde, 0x15, 0x8a, 0x4a, 0x67, 0x65, 0xd7, 0xc8, 0x1f,
	0x00, 0x3b, 0x96, 0x5a, 0xf8, 0xb1, 0x97, 0x86, 0xb2, 0x09, 0xf9, 0x02, 0x42, 0x2a, 0x0d, 0xd6,
	0xa4, 0xcc, 0x41, 0xb0, 0xd8, 0x4b, 0x99, 0x3c, 0x27, 0x38, 0x87, 0x89, 0x56, 0xa4, 0xc4, 0x24,
	0x66, 0xa9, 0x2f, 0xdb, 0xb8, 0xc9, 0xed, 0x51, 0x69, 0x11, 0xc4, 0x2c, 0x0d, 0x65, 0x1b, 0xf3,
	0x19, 0x4c, 0x35, 0x92, 0x2a, 0x2b, 0x31, 0x6d, 0xb3, 0xfd, 0x29, 0xf9, 0xee, 0x41, 0xd8, 0x43,
	0xbf, 0xd3, 0xb7, 0xc3, 0xdb, 0xb2, 0x4d, 0x46, 0xd9, 0x82, 0x0b, 0xb6, 0x17, 0x70, 0xff, 0x97,
	0x9f, 0xf5, 0xc1, 0xd9, 0x1a, 0x1b, 0x79, 0xe1, 0x74, 0xc7, 0x17, 0xca, 0x36, 0x6e, 0xe4, 0x35,
	0x29, 0x3a, 0xd6, 0x3d, 0x45, 0x7f, 0x4a, 0x6a, 0x88, 0x86, 0xc9, 0xec, 0xd6, 0xfd, 0xc3, 0x6c,
	0x39, 0xdc, 0x14, 0xce, 0x12, 0x5a, 0x12, 0x7e, 0xcc, 0xd2, 0x28, 0x17, 0x17, 0x9a, 0xe1, 0xe3,
	0x84, 0x46, 0x0e, 0x8d, 0xc9, 0xd7, 0xf3, 0xa5, 0x84, 0x66, 0xb0, 0xc7, 0xbb, 0x62, 0x8f, 0x7f,
	0x6d, 0x9d, 0x6c, 0x64, 0x9d, 0x7f, 0x61, 0x59, 0xfe, 0xcd, 0x87, 0x9b, 0xfe, 0x7e, 0xfe, 0x12,
	0xd8, 0x2b, 0xad, 0xf9, 0xe3, 0x31, 0xe8, 0xfe, 0x07, 0x9d, 0x2f, 0xc6, 0x8b, 0xbd, 0xdb, 0xcf,
	0x81, 0xbd, 0xc6, 0x8a, 0xcf, 0x46, 0xc7, 0xd6, 0x7f, 0x10, 0xaf, 0x21, 0xf8, 0xa0, 0xa8, 0xd8,
	0xff, 0x0f, 0xc0, 0x33, 0x60, 0x6f, 0x91, 0xae, 0x02, 0x8c, 0xef, 0xc3, 0x6e, 0xdd, 0xfa, 0xd1,
	0xa7, 0x87, 0xd9, 0xb2, 0x7d, 0x96, 0x4f, 0x76, 0xae, 0x52, 0x76, 0xb7, 0x3c, 0xad, 0x36, 0xd3,
	0x36, 0xf1, 0xf4, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x72, 0x8b, 0x67, 0x12, 0xd3, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ElementClient is the client API for Element service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ElementClient interface {
	Add(ctx context.Context, in *ElementRequest, opts ...grpc.CallOption) (*ElementResponse, error)
	Del(ctx context.Context, in *ElementId, opts ...grpc.CallOption) (*ElementResponse, error)
	Patch(ctx context.Context, in *ElementRequest, opts ...grpc.CallOption) (*ElementResponse, error)
	Get(ctx context.Context, in *ElementId, opts ...grpc.CallOption) (*ElementInfo, error)
}

type elementClient struct {
	cc *grpc.ClientConn
}

func NewElementClient(cc *grpc.ClientConn) ElementClient {
	return &elementClient{cc}
}

func (c *elementClient) Add(ctx context.Context, in *ElementRequest, opts ...grpc.CallOption) (*ElementResponse, error) {
	out := new(ElementResponse)
	err := c.cc.Invoke(ctx, "/mechelia.v0.Element/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *elementClient) Del(ctx context.Context, in *ElementId, opts ...grpc.CallOption) (*ElementResponse, error) {
	out := new(ElementResponse)
	err := c.cc.Invoke(ctx, "/mechelia.v0.Element/Del", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *elementClient) Patch(ctx context.Context, in *ElementRequest, opts ...grpc.CallOption) (*ElementResponse, error) {
	out := new(ElementResponse)
	err := c.cc.Invoke(ctx, "/mechelia.v0.Element/Patch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *elementClient) Get(ctx context.Context, in *ElementId, opts ...grpc.CallOption) (*ElementInfo, error) {
	out := new(ElementInfo)
	err := c.cc.Invoke(ctx, "/mechelia.v0.Element/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ElementServer is the server API for Element service.
type ElementServer interface {
	Add(context.Context, *ElementRequest) (*ElementResponse, error)
	Del(context.Context, *ElementId) (*ElementResponse, error)
	Patch(context.Context, *ElementRequest) (*ElementResponse, error)
	Get(context.Context, *ElementId) (*ElementInfo, error)
}

// UnimplementedElementServer can be embedded to have forward compatible implementations.
type UnimplementedElementServer struct {
}

func (*UnimplementedElementServer) Add(ctx context.Context, req *ElementRequest) (*ElementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedElementServer) Del(ctx context.Context, req *ElementId) (*ElementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Del not implemented")
}
func (*UnimplementedElementServer) Patch(ctx context.Context, req *ElementRequest) (*ElementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Patch not implemented")
}
func (*UnimplementedElementServer) Get(ctx context.Context, req *ElementId) (*ElementInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterElementServer(s *grpc.Server, srv ElementServer) {
	s.RegisterService(&_Element_serviceDesc, srv)
}

func _Element_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ElementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElementServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mechelia.v0.Element/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElementServer).Add(ctx, req.(*ElementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Element_Del_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ElementId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElementServer).Del(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mechelia.v0.Element/Del",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElementServer).Del(ctx, req.(*ElementId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Element_Patch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ElementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElementServer).Patch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mechelia.v0.Element/Patch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElementServer).Patch(ctx, req.(*ElementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Element_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ElementId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElementServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mechelia.v0.Element/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElementServer).Get(ctx, req.(*ElementId))
	}
	return interceptor(ctx, in, info, handler)
}

var _Element_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mechelia.v0.Element",
	HandlerType: (*ElementServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Element_Add_Handler,
		},
		{
			MethodName: "Del",
			Handler:    _Element_Del_Handler,
		},
		{
			MethodName: "Patch",
			Handler:    _Element_Patch_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Element_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "element.proto",
}
